type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type User {
  id: String
  username: String
}

type Project {
  id: String
  name: String
  description: String
  created_by: String
}

type ProjectEdge {
  node: Project
}

type ProjectConnection {
  pageInfo: PageInfo!
  edges: [ProjectEdge]
}

type Mutation {
  register(username: String!, password: String!): String
  login(username: String!, password: String!): String
  createProject(name: String!, description: String): Project
}

type Query {
  getCurrentUser: User
  project(id: String!): Project
  projects: ProjectConnection
}

schema {
  mutation: Mutation
  query: Query
}
